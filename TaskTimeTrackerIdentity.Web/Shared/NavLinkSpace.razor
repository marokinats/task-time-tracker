@using Microsoft.EntityFrameworkCore;
@using Microsoft.AspNetCore.Identity;
@using TaskTimeTrackerIdentity.Dal.Model;
@using TaskTimeTrackerIdentity.Web.Services.Interfaces;
@using Task = System.Threading.Tasks.Task;

<li class="nav-item dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="fa-solid fa-plus"></i>
        <span>@AppState.CurrentSpaceName</span>
    </button>

    <div class="dropdown-menu">
        @{
            if (AppState.CurrentUserSpacesList != null && AppState.CurrentUserSpacesList.Count > 0)
            {
                foreach (Space space in AppState.CurrentUserSpacesList)
                {

                    <button class="dropdown-item" @onclick="() => SelectSpace(space)">@space.Name</button>
                }
            }
        }
        <a href="/space/join" class="dropdown-item"
           @onclick="@(() => SelectSpaceNavLink("/space/join", "Join to existing Space"))">Join to existing Space</a>
        <a href="/space/create" class="dropdown-item">Create new Space</a>
    </div>
</li>

@{
    if (AppState.CurrentBoardsList != null && AppState.CurrentBoardsList?.Count > 0)
    {
        <li class="nav-item dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <span>@AppState.CurrentBoardName</span>
            </button>

            <div class="dropdown-menu">
                @{
                    foreach (Board board in AppState.CurrentBoardsList)
                    {
                        <button class="dropdown-item" @onclick="() => SelectBoard(board)">@board.Name</button>
                    }
                }
            </div>
        </li>


    }
}

@code {
    
}

